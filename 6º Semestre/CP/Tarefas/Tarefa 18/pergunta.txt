No módulo 8, é possível entender o funcionamento da vetorização no, onde é possível fazer operações MIMD ao invés das típicas operações SIMD de um código sequencial.

Ao carregar valores de um vetor da memória, ao invés de carregá-los um a um, ou seja, elemento por elemento do vetor, com a vetorização é possível carregar vários elementos ao mesmo tempo. Com isso, poupa-se tempo de overhead de busca de dados na memória buscando vários dados de uma só vez.

Ex:

	int a[n], b[n], c[n];

	for(int i=0; i<n; i++){
		a[i] = b[i] + c[i];
	}

Nesse exemplo, é possível carregar os elementos de b e c de forma vetorial e armazenar sua soma nos elementos de a.

	a{i, i+1, i+2, ..., i+n-1} = b{i, i+1, i+2, ..., i+n-1} + c{i, i+1, i+2, ..., i+n-1};

Minha dúvida é, se a vetorização é escalável de forma que possa expandir seu conceito para matrizes de duas ou mais dimensões, ou se ao aumentar o número de dimensões o problema não melhora em desempenho.
